import { BaseEvent, EventDispatcher, Uniform } from "three";
import { BlendFunction } from "./BlendFunction.js";
/**
 * BlendMode events.
 *
 * @group Blending
 */
export interface BlendModeEventMap {
    change: BaseEvent;
}
/**
 * A blend mode.
 *
 * @group Blending
 */
export declare class BlendMode extends EventDispatcher<BlendModeEventMap> {
    /**
     * Triggers when the blend function is changed.
     *
     * @event
     */
    static readonly EVENT_CHANGE = "change";
    /**
     * @see {@link blendFunction}
     */
    private _blendFunction;
    /**
     * A uniform that controls the opacity of this blend mode.
     *
     * @see {@link opacity}
     */
    readonly opacityUniform: Uniform;
    /**
     * Constructs a new blend mode.
     *
     * @param blendFunction - The blend function.
     * @param opacity - The opacity of the new color that will be blended with the base color.
     */
    constructor(blendFunction: BlendFunction, opacity?: number);
    /**
     * A convenience accessor for the opacity uniform value.
     *
     * @see {@link opacityUniform}
     */
    get opacity(): number;
    set opacity(value: number);
    /**
     * The blend function.
     */
    get blendFunction(): BlendFunction;
    set blendFunction(value: BlendFunction);
}
