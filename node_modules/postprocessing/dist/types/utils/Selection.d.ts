import { Object3D } from "three";
/**
 * An object selection.
 *
 * Object selections use render layers to facilitate quick and efficient visibility changes.
 *
 * @group Utils
 */
export declare class Selection extends Set<Object3D> {
    /**
     * The next layer ID.
     */
    private static nextId;
    /**
     * @see {@link layer}
     */
    private _layer;
    /**
     * Indicates whether this selection is enabled.
     */
    enabled: boolean;
    /**
     * Controls whether objects that are added to this selection should be removed from all other layers.
     */
    exclusive: boolean;
    /**
     * Constructs a new selection.
     *
     * @param iterable - A collection of objects that should be added to this selection.
     * @param layer - A dedicated render layer for selected objects. Range is `[2, 31]`. Starts at 2 if omitted.
     */
    constructor(iterable?: Iterable<Object3D>, layer?: number);
    /**
     * The render layer for selected objects.
     */
    get layer(): number;
    set layer(value: number);
    /**
     * Clears this selection.
     */
    clear(): void;
    /**
     * Adds an object to this selection.
     *
     * If {@link exclusive} is set to `true`, the object will also be removed from all other layers.
     *
     * @param object - The object that should be selected.
     * @return This selection.
     */
    add(object: Object3D): this;
    /**
     * Removes an object from this selection.
     *
     * @param object - The object that should be deselected.
     * @return Returns true if an object has successfully been removed from this selection; otherwise false.
     */
    delete(object: Object3D): boolean;
    /**
     * Clears this selection and adds the given objects.
     *
     * @param objects - The objects that should be selected.
     * @return This selection.
     */
    set(objects: Iterable<Object3D>): this;
    /**
     * Removes an existing object from the selection. If the object doesn't exist it's added instead.
     *
     * @param object - The object.
     * @return Returns true if the object is added, false otherwise.
     */
    toggle(object: Object3D): boolean;
    /**
     * Sets the visibility of all selected objects.
     *
     * This method enables or disables render layer 0 of all selected objects.
     *
     * @param visible - Whether the selected objects should be visible.
     * @return This selection.
     */
    setVisible(visible: boolean): this;
}
